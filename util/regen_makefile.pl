#!/usr/bin/perl

# See LICENSE file for copyright and license details.

use strict;
use warnings;

my $max_length = 60;
my $indent_size = 2;
my $indent = ' ' x ($indent_size - 1);

# die "ERROR: No max_length arg.\n", $usage unless $max_length;
# die "ERROR: No indent_size arg.\n", $usage unless $indent_size;
die "ERROR: Too many arguments.\n" unless @ARGV == 0;

sub get_obj_name {
  my ($filename) = @_;
  # Remove './' at the begining of string
  $filename =~ s|^\.\/||;
  # Replace extension '.c' -> '.o'
  $filename =~ s/\.c$/.o/;
  return $filename;
}

sub is_able_to_add_string {
  my ($len, $string) = @_;
  my $string_is_empty = ($len == $indent_size);
  return ($len + length $_ < $max_length) or $string_is_empty;
}

sub parse_file {
  my ($filename) = @_;
  unless ($filename =~ /\.c$/) {
    die "ERROR: Extension != '.c': '" . $filename . "'\n";
  }
  my $out = &get_obj_name($filename) . ": \\\n" . $indent;
  my $len = $indent_size;
  open(my $file, "< $filename")
      or die "ERROR: Can't open file '$filename': $!";
  while (<$file>) {
    next unless /^#include \".*\"$/;
    $_ =~ s/^#include //;
    $_ =~ s/[\n]| |[\"]//g;
    if (not &is_able_to_add_string($len, $_)) {
      $out .= " \\\n" . $indent;
      $len = $indent_size;
    }
    $out .= ' ' . $_;
    $len += length $_;
  }
  close $file;
  return $out . "\n";
}

sub parse_makefile {
  my @files;
  open(my $makefile, "<", "Makefile")
      or die "ERROR: Can't open Makefile: $!";
  while (<$makefile>) {
    next unless /^ *[^ #]*\.o( \\)*$/;
    $_ =~ s/[\n]| |[\\]//g;
    $_ =~ s/\.o$/.c/;
    push @files, $_;
  }
  close $makefile;
  return @files;
}

my @files = &parse_makefile();
open(my $original_makefile, "<", "Makefile")
    or die "ERROR: Can't open Makefile: $!";
open(my $new_makefile, ">", "Makefile.new")
    or die "ERROR: Can't open Makefile.new: $!";
while (<$original_makefile>) {
  last if /^# Autogenerated:$/;
  print $new_makefile $_;
}
close $original_makefile;
print $new_makefile "# Autogenerated:\n";
print $new_makefile &parse_file($_) foreach @files;
close $new_makefile;
rename("Makefile.new", "Makefile");
